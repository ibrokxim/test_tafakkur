version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: test_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    depends_on:
      - db
      - elasticsearch
    networks:
      - test-network

  # Nginx Service
  web:
    image: nginx:alpine
    container_name: test_web
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./src:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - test-network

  # PostgreSQL Service
  db:
    image: postgres:13
    container_name: test_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - test-db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - test-network

  # Elasticsearch Service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.5
    container_name: test_elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - test-es-data:/usr/share/elasticsearch/data
    networks:
      - test-network

volumes:
  test-db-data:
    driver: local
  test-es-data:
    driver: local

networks:
  test-network:
    driver: bridge